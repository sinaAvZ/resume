{
	"info": {
		"_postman_id": "5fff2350-dcb4-4f96-b0f7-1e54120a92db",
		"name": "REST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{ 
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"access-token\",pm.response.json().access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "userOne",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12341234",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base-url}}/auth/login",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"access-token\",pm.response.json().access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "userOne",
									"type": "text"
								},
								{
									"key": "firstname",
									"value": "userOneFN",
									"type": "text"
								},
								{
									"key": "lastname",
									"value": "userOneLN",
									"type": "text"
								},
								{
									"key": "email",
									"value": "uesrone@server.com",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "+989211111111",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12341234",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base-url}}/auth/register/user",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"auth",
								"register",
								"user"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "player",
			"item": [
				{
					"name": "create",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"weight\": 120,\n    \"coach\": \"c1\",\n    \"province\": \"kerman\",\n    \"nationalCode\": \"1234123412\",\n    \"firstname\": \"f1\",\n    \"lastname\":\"l1\",\n    \"clubName\":\"c1\",\n    \"registrant\":\"R1\",\n    \"city\": \"kerman\",\n    \"weightGroup\":\"light3\",\n    \"paymentCode\": \"11223344\",\n    \"insuranceStatus\": false,\n    \"league\":1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/player/",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"player",
								""
							]
						},
						"description": "{\n    //   @IsNumber()\n    //   @Min(20)\n    //   @Max(300)\n    \"weigh\": 120,\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(50)\n    \"coach\": \"c1\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(20)\n    \"province\": \"kerman\",\n    //   @IsString()\n    //   @MaxLength(10)\n    \"nationalCode\": \"1234123412\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(50)\n    \"name\": \"p1\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(20)\n    \"city\": \"kerman\",\n    //   @IsString()\n    //   @MinLength(1)\n    //   @MaxLength(50)\n    \"group\": \"light\",\n    //  @IsString()\n    //   @MinLength(1)\n    //   @MaxLength(20)\n    \"paymentCode\": \"11223344\",\n    // @IsBoolean()\n    \"insuranceStatus\": false\n}"
					},
					"response": []
				},
				{
					"name": "edit",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"weight\": 120,\n    \"coach\": \"c1\",\n    \"province\": \"kerman\",\n    \"nationalCode\": \"1234123412\",\n    \"firstname\": \"f1\",\n    \"lastname\":\"l1\",\n    \"clubName\":\"c1\",\n    \"registrant\":\"R1\",\n    \"city\": \"kerman\",\n    \"weightGroup\":\"light4\",\n    \"paymentCode\": \"11223344\",\n    \"insuranceStatus\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/player/13",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"player",
								"13"
							]
						},
						"description": "{\n    //   @IsNumber()\n    //   @Min(20)\n    //   @Max(300)\n    \"weigh\": 120,\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(50)\n    \"coach\": \"c1\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(20)\n    \"province\": \"kerman\",\n    //   @IsString()\n    //   @MaxLength(10)\n    \"nationalCode\": \"1234123412\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(50)\n    \"name\": \"p1\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(20)\n    \"city\": \"kerman\",\n    //   @IsString()\n    //   @MinLength(1)\n    //   @MaxLength(50)\n    \"group\": \"light\",\n    //  @IsString()\n    //   @MinLength(1)\n    //   @MaxLength(20)\n    \"paymentCode\": \"11223344\",\n    // @IsBoolean()\n    \"insuranceStatus\": false\n}"
					},
					"response": []
				},
				{
					"name": "get all",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/player/",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"player",
								""
							],
							"query": [
								{
									"key": "skip",
									"value": "1",
									"disabled": true
								},
								{
									"key": "take",
									"value": "2",
									"disabled": true
								}
							]
						},
						"description": "{\n    //   @IsNumber()\n    //   @Min(20)\n    //   @Max(300)\n    \"weigh\": 120,\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(50)\n    \"coach\": \"c1\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(20)\n    \"province\": \"kerman\",\n    //   @IsString()\n    //   @MaxLength(10)\n    \"nationalCode\": \"1234123412\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(50)\n    \"name\": \"p1\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(20)\n    \"city\": \"kerman\",\n    //   @IsString()\n    //   @MinLength(1)\n    //   @MaxLength(50)\n    \"group\": \"light\",\n    //  @IsString()\n    //   @MinLength(1)\n    //   @MaxLength(20)\n    \"paymentCode\": \"11223344\",\n    // @IsBoolean()\n    \"insuranceStatus\": false\n}"
					},
					"response": []
				},
				{
					"name": "get by id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/player/4",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"player",
								"4"
							]
						},
						"description": "{\n    //   @IsNumber()\n    //   @Min(20)\n    //   @Max(300)\n    \"weigh\": 120,\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(50)\n    \"coach\": \"c1\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(20)\n    \"province\": \"kerman\",\n    //   @IsString()\n    //   @MaxLength(10)\n    \"nationalCode\": \"1234123412\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(50)\n    \"name\": \"p1\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(20)\n    \"city\": \"kerman\",\n    //   @IsString()\n    //   @MinLength(1)\n    //   @MaxLength(50)\n    \"group\": \"light\",\n    //  @IsString()\n    //   @MinLength(1)\n    //   @MaxLength(20)\n    \"paymentCode\": \"11223344\",\n    // @IsBoolean()\n    \"insuranceStatus\": false\n}"
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/player/3",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"player",
								"3"
							]
						},
						"description": "{\n    //   @IsNumber()\n    //   @Min(20)\n    //   @Max(300)\n    \"weigh\": 120,\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(50)\n    \"coach\": \"c1\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(20)\n    \"province\": \"kerman\",\n    //   @IsString()\n    //   @MaxLength(10)\n    \"nationalCode\": \"1234123412\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(50)\n    \"name\": \"p1\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(20)\n    \"city\": \"kerman\",\n    //   @IsString()\n    //   @MinLength(1)\n    //   @MaxLength(50)\n    \"group\": \"light\",\n    //  @IsString()\n    //   @MinLength(1)\n    //   @MaxLength(20)\n    \"paymentCode\": \"11223344\",\n    // @IsBoolean()\n    \"insuranceStatus\": false\n}"
					},
					"response": []
				},
				{
					"name": "saerch",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/player/search/123?league=1&skip=1&take=2",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"player",
								"search",
								"123"
							],
							"query": [
								{
									"key": "league",
									"value": "1"
								},
								{
									"key": "skip",
									"value": "1"
								},
								{
									"key": "take",
									"value": "2"
								}
							]
						},
						"description": "{\n    //   @IsNumber()\n    //   @Min(20)\n    //   @Max(300)\n    \"weigh\": 120,\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(50)\n    \"coach\": \"c1\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(20)\n    \"province\": \"kerman\",\n    //   @IsString()\n    //   @MaxLength(10)\n    \"nationalCode\": \"1234123412\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(50)\n    \"name\": \"p1\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(20)\n    \"city\": \"kerman\",\n    //   @IsString()\n    //   @MinLength(1)\n    //   @MaxLength(50)\n    \"group\": \"light\",\n    //  @IsString()\n    //   @MinLength(1)\n    //   @MaxLength(20)\n    \"paymentCode\": \"11223344\",\n    // @IsBoolean()\n    \"insuranceStatus\": false\n}"
					},
					"response": []
				},
				{
					"name": "saerch Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base-url}}/player/statistics/kerman",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"player",
								"statistics",
								"kerman"
							]
						},
						"description": "{\n    //   @IsNumber()\n    //   @Min(20)\n    //   @Max(300)\n    \"weigh\": 120,\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(50)\n    \"coach\": \"c1\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(20)\n    \"province\": \"kerman\",\n    //   @IsString()\n    //   @MaxLength(10)\n    \"nationalCode\": \"1234123412\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(50)\n    \"name\": \"p1\",\n    //   @IsString()\n    //   @MinLength(2)\n    //   @MaxLength(20)\n    \"city\": \"kerman\",\n    //   @IsString()\n    //   @MinLength(1)\n    //   @MaxLength(50)\n    \"group\": \"light\",\n    //  @IsString()\n    //   @MinLength(1)\n    //   @MaxLength(20)\n    \"paymentCode\": \"11223344\",\n    // @IsBoolean()\n    \"insuranceStatus\": false\n}"
					},
					"response": []
				},
				{
					"name": "accept",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"weight\":100,\n    \"group\":7\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/player/accept/3",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"player",
								"accept",
								"3"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "league",
			"item": [
				{
					"name": "new league",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"date\":\"2021-05-19T10:35:29.018Z\",\n    \"competitionName\":\"league1\",\n    \"federationName\":\"f1\",\n    \"staffName\":\"s1\",\n    \"systemName\":\"sys1\",\n    \"gameStyle\":\"style1\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/league/",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"league",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "group",
			"item": [
				{
					"name": "new group",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"g21\",\n    \"ageRange\":\"20-24\",\n    \"weightRange\":\"+40\",\n    \"league\":1,\n    \"size\":16\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/group/",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"group",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "get groups",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\":\"g3\",\n    \"ageRange\":\"20-24\",\n    \"weight\":\"+40\",\n    \"league\":2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/group/?league=1",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"group",
								""
							],
							"query": [
								{
									"key": "take",
									"value": "2",
									"disabled": true
								},
								{
									"key": "skip",
									"value": "0",
									"disabled": true
								},
								{
									"key": "league",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "fill table",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base-url}}/group/1/fill",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"group",
								"1",
								"fill"
							]
						}
					},
					"response": []
				},
				{
					"name": "swap",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstPlayerGame\": 39,\n    \"firstPlayerColor\":\"redPlayer\",\n    \"secondPlayerGame\":43,\n    \"secondPlayerColor\":\"bluePlayer\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/group/1/swap",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"group",
								"1",
								"swap"
							]
						}
					},
					"response": []
				},
				{
					"name": "edit",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"name\",\n    \"manager\": \"string\",\n    \"approvalStandings\": \"string\",\n    \"registrar\": \"string\",\n    \"judgeCount\": 3,\n    \"ageRange\": \"+20\",\n    \"weightRange\": \"+50\",\n    \"params\": [\n        {\n            \"key\": \"string\",\n            \"value\": \"string\",\n            \"scope\": \"rdound\",\n            \"compute\": true\n        }\n    ],\n    \"icon2\":\"\",\n    \"icon3\":\"\",\n    \"icon1\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base-url}}/group/1",
							"host": [
								"{{base-url}}"
							],
							"path": [
								"group",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access-token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}